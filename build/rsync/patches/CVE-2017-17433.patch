The recv_files function in receiver.c in the daemon in rsync 3.1.2,
and 3.1.3-development before 2017-12-03, proceeds with certain file
metadata updates before checking for a filename in the
daemon_filter_listdata structure, which allows remote
attackers to bypass intended access restrictions.

diff -pruN '--exclude=*.orig' rsync-3.1.2~/receiver.c rsync-3.1.2/receiver.c
--- rsync-3.1.2~/receiver.c	2015-09-07 19:07:17.000000000 +0000
+++ rsync-3.1.2/receiver.c	2017-12-07 20:02:14.654492862 +0000
@@ -580,6 +580,12 @@ int recv_files(int f_in, int f_out, char
 			file = dir_flist->files[cur_flist->parent_ndx];
 		fname = local_name ? local_name : f_name(file, fbuf);
 
+		if (daemon_filter_list.head
+		    && check_filter(&daemon_filter_list, FLOG, fname, 0) < 0) {
+			rprintf(FERROR, "attempt to hack rsync failed.\n");
+			exit_cleanup(RERR_PROTOCOL);
+		}
+
 		if (DEBUG_GTE(RECV, 1))
 			rprintf(FINFO, "recv_files(%s)\n", fname);
 
@@ -651,12 +657,6 @@ int recv_files(int f_in, int f_out, char
 
 		cleanup_got_literal = 0;
 
-		if (daemon_filter_list.head
-		    && check_filter(&daemon_filter_list, FLOG, fname, 0) < 0) {
-			rprintf(FERROR, "attempt to hack rsync failed.\n");
-			exit_cleanup(RERR_PROTOCOL);
-		}
-
 		if (read_batch) {
 			int wanted = redoing
 				   ? we_want_redo(ndx)
